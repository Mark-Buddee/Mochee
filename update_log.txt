v0.50
    Correct perft results up to depth 3 ply

v0.51
    -En passant now implemented correctly
    Incorrect perft results can now be made to any depth

v0.52
    Checks are detected

v0.53
    -Check evasion nuances fixed
    Double checks are detected
    Evaluation can be made, but illegal positions persist
    Evaluation is based only on material and piece square tables
    Exhaustive search algorithm; takes minutes to evaluate to depth of 7 ply
        Depth 0 Eval: 0
        Depth 1 Eval: 46
        Depth 2 Eval: 0
        Depth 3 Eval: 46
        Depth 4 Eval: -5
        Depth 5 Eval: 129
        Depth 6 Eval: -69
        Depth 7 Eval: 102

v0.6    14/07/23
    -Double check detection fixed
    Debug mode added
    Move generation is rewritten, taking inspiration from stockfish
    Correct perft results (so far) up to any depth can be made
        depth 0 ply:           0 positions in 0 seconds                                                                                                     
        depth 1 ply:          20 positions in 0.001 seconds
        depth 2 ply:         400 positions in 0.002 seconds
        depth 3 ply:        8902 positions in 0.004 seconds
        depth 4 ply:      197281 positions in 0.013 seconds
        depth 5 ply:     4865609 positions in 0.16 seconds
        depth 6 ply:   119060324 positions in 3.7 seconds
        depth 7 ply:  3195901860 positions in 104 seconds

v0.61   15/07/23
    Perft unit test added
    Various positions and depths easily added in a csv file
    Looks sick
        PHASE    TEST TYPE  DEPTH  NODES        RESULT
        Opening  General    6 ply  119060324    PASSED in 3.559 seconds
        Midgame  Castling   5 ply  193690690    PASSED in 3.868 seconds
        Endgame  EnPassant  7 ply  178633661    PASSED in 9.691 seconds
        Midgame  Promotion  6 ply  706045033    PASSED in 15.21 seconds
        Opening  Castling   5 ply   89941194    PASSED in 2.12 seconds
        Opening  General    5 ply  164075551    PASSED in 2.721 seconds

        SUMMARY: PASS in 37.17 total seconds

v0.7    18/07/23
    Evaluation search reimplemented, achieving almost identical results to v0.53
    Displaying the principal variation proves a little too complicated for its worth at this point
    however preliminary validation shows promise (1.e4 e5 2.(Nf3) ...)
        DEPTH  EVAL  TIME(s)
        1 ply    46        0
        2 ply     0        0
        3 ply    46    0.005
        4 ply    -5    0.137
        5 ply   129    2.879
        6 ply   -69   72.222
        7 ply   124  1974.25

v0.71   19/07/23
    Alpha beta search and incremental board evaluation implemented 
    Significant speed-up to evaluation search
        DEPTH  EVAL  TIME(s)
        1 ply    46        0
        2 ply     0        0
        3 ply    46    0.002
        4 ply    -5    0.009
        5 ply   129    0.058
        6 ply   -69    0.823
        7 ply   124     4.97
        8 ply   -94   63.876
        9 ply   143  330.505
       10 ply   -95  3961.67

v0.72   28/07/23
    Best move is displayed
    Play function added to debug mode, allowing for player vs computer games

    Fancy magic bitboards implemented
        Limits on the best possible shift values are taken from online
        All magic numbers are self generated with the exception of:
            Rook table 7th and 8th rank
        Attack table is 725.5 KB, further table size reductions aren't necessary
    Significant speed-up to move generation
        Move generation ~2x faster. Perft unit test now takes 18.62 seconds (down from 37.17)
        Evaluation ~7x faster. Evaluation search to depth 10 takes 707.797 seconds (down from 3961.67)
        DEPTH  EVAL  TIME(s)  BEST
        1 ply    46        0  d2d4
        2 ply     0        0  d2d4
        3 ply    46        0  e2e4
        4 ply    -5    0.002  g1f3
        5 ply   129     0.01  e2e4
        6 ply   -69    0.148  f2f4
        7 ply   124    0.961  e2e3
        8 ply   -94   11.504  e2e4
        9 ply   143   62.375  e2e3
       10 ply   -95  707.797  d2d4

    ***FIRST MATCH*** 
        Against KDAWWWWWGGGGGSSS
        After a clumsy opening, Mochee offered a bishop for two pawns with 14... Bh5?! for a promising initiative
        It continued by 'sacrificing' an exchange for mate in 6 with 25... Qg2+ 26. Rf3 Qg6+ 27. Rf5 Qxf5#
        While it correctly evaluated the position, a bug prevented the mate from playing out
        The game continued, slowly losing initiative, until KDAWWWWWGGGGGSSS found a threatening attack,
        in which the same bug walked itself into mate. 
        KDAWWWWWGGGGGSSS 1-0 Mochee

        1. e4 d5 2. exd5 Qxd5 3. Nc3 Qd4 4. Nf3 Qf6 5. d4 Bg4 6. Be2 Nd7 7. O-O O-O-O 8.
        Ne4 Qc6 9. Ng3 Qf6 10. a4 c5 11. d5 Nb6 12. Ne4 Qf5 13. Nc3 e6 14. h3 Bh5 15. g4
         Bxg4 16. hxg4 Qxg4+ 17. Kh1 Nxd5 18. Nxd5 Rxd5 19. Nh2 Qh4 20. Qe1 Re5 21. Be3 
        Bd6 22. Kg2 Rxe3 23. fxe3 Qxh2+ 24. Kf3 Qh3+ 25. Ke4 Nh6 26. Kd3 Qg2 27. Bf3 Qh3
         28. Ke2 Nf5 29. Rg1 Be7 30. Ra3 Bh4 31. Qa5 Qh2+ 32. Rg2 Ng3+ 33. Kd3 Qh1 34. 
        Qxc5+ Kb8 35. Qd6+ Ka8 36. Bxb7+ Kxb7 37. Rb3+ Ka8 38. Qc6# 1-0

***FUTURE***
v0.73   ~30/07/23
    -Fixed an excessive memory allocation in alphaBeta
    -Engine can now correctly chase mate after finding one, even if told to search beyond mate
    Position setting by fen implemented in debug mode
    Move generation and evaluation about 17% faster with incremental check-data updates
    Evaluation has significant speed-up from most-valuable-first move ordering
        DEPTH  EVAL  TIME(s)  BEST                                                                                                                                                                                           
        1 ply    46        0  d2d4
        2 ply     0        0  d2d4
        3 ply    46        0  e2e4
        4 ply    -5    0.001  g1f3
        5 ply   129    0.002  e2e4
        6 ply   -69    0.028  f2f4
        7 ply   124    0.239  e2e3
        8 ply   -94    3.648  e2e4
        9 ply   143   21.976  e2e3
       10 ply   -95  285.627  d2d4
       11 ply   129  3435.53  e2e3 // This depth done with sub optimal move ordering

Save this fucking shit online
Hash table
Display principal variation
Allow queening as input
Reevaluate move ordering
Iterative deepening
RELEASE v1.0 to lichess public

Quiesce()
null move
killer nodes
Version tester (pair bot against bot)
evaluation bonuses
Mochee_0
